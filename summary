\documentclass{ctexart}
\title{Pre-project Homework for 3D Group Members}
\begin{document}
	\maketitle
	\section{Questions}
	\begin{enumerate}
		\item Supported programming languages
    		\begin{itemize}
            \item
             unity:UnityScript（派生自ECMAScript）,Sharp,Javascript,BOO（派生自Python）,C++仅使用在核心引擎）；
            \item cryengine:C++、C Sharp、Lua脚本语言；
            \item unreal:C++，c Sharp在部分插件中可以。
            \end{itemize}

		\item Multi-platform deployment
            \begin{itemize}
            \item unity：
                \begin{itemize}
                \item 制作平台:Windows,Mac OS X
                \item 部署平台:Windows,Mac OSX,Linux,Wii，WiiU，新3DS（部署需要特别授权）,Xbox,360，
                    XboxONE（部署需要微软授权）,PS3，PS4，PSV（部署需要特别授权）Android（部署需要特别授权）,
                    iOS，iPhone/iPad（部署需要特别授权）,Windows Phone,支持WebGL的网页浏览器
                \end{itemize}
            \item cryengine\\
                Windows、Linux、PS3、PS4、Wii U、Xbox 360、Xbox One (官网和知乎上并没有说支持mac os？)
            \item unreal:
                \begin{itemize}
                \item programs:WindowsPC、Mac OS X、iOS、Android、Linux、SteamOS,XBOX, PS4 HTML5;
                \item editor: windows,OS X
                \end{itemize}
            \end{itemize}
		\item Hardware requirements for developers and users
            \begin{itemize}
            \item unity:
                \begin{itemize}
                \item 基本要求（参考URL http://unity3d.com/unity/system-requirements）
                    \begin{itemize}
		            \item FOR DEVELOPMENT\\
			            \indent OS: Windows XP SP2+, 7 SP1+, 8; Mac OS X 10.8,Windows Vista is
                             not supported; and server versions of Windows and OS X are not tested.\\
                        GPU:Graphics card with DX9 (shader model 2.0) capabilities.
                             Anything made since 2004 should work.\\
			            The rest mostly depends on the complexity of your projects.\\
			            Additional platform development requirements:\\
                        iOS: Mac computer running minimum OS X 10.9.4 version and
                              Xcode 6.x.
			            Android: Android SDK and Java Development Kit (JDK).
                     	Windows 8/8.1 Store Apps / Windows Phone 8/8.1:
                                64 bit Windows 8.1 Pro and Visual Studio 2013Update 2+.
			            Blackberry: 32 bit Java Runtime (JRE).
                    \item OS: Windows XP, Mac OS X 10.7, Ubuntu 10.10, SteamOS+\\
			              Graphics card: DX9 (shader model 2.0) capabilities; \\
                          generally everything made since 2004 should work.\\
			              CPU: SSE2 instruction set support.\\
			              Web players:IE, Chrome, Firefox, Safari and others.\\
			              iOS: requires iOS 6.0 or later.\\
			              Android: OS 2.3.1 or later; ARMv7 (Cortex) CPU or Atom CPU; Open
                          GL ES 2.0 or later.\\
			              Blackberry: OS 10 or later
                    \end{itemize}
                \item 进阶参考数据：URL：http://stats.unity3d.com/
                \end{itemize}
            \item cryengine:
                \begin{itemize}
                \item 开发者:\\
                操作系统：Windows XP SP2,Windows Vista SP1,Windows 7\\
                CPU：英特尔Core 2 Duo 2GHz时，AMD速龙64 X2 2GHz或更好（强烈建议多核心处理器）\\ 内存：2 GB RAM（推荐使用4 GB）\\
                显卡：NVIDIA 8800GT 512MB RAM，ATI 3850HD 512MB RAM或更高（SM 3.0最低）
                \item 用户：\\
                最终用户只使用无沙箱游戏启动，系统的要求较低。\\
                操作系统：Windows XP SP2，Windows Vista SP1，Windows 7\\
                CPU：英特尔Core 2 Duo 2GHz时，AMD速龙64 X2 2GHz或更好（强烈建议多核心处理器）\\
                内存：1 GB内存（推荐2 GB）\\
                显示卡：NVIDIA 8800GT 512MB RAM，ATI 3850HD 512MB RAM或更高（SM 3.0最低）
                \end{itemize}
            \item unreal:
                \begin{itemize}
                \item 开发者:\\
                Desktop PC or Mac.\\
                Windows 7 64-bit or Mac OS X 10.9.2 or later.\\
                Quad-core Intel or AMD processor, 2.5 GHz or faster.\\
                NVIDIA GeForce 470 GTX or AMD Radeon 6870 HD series card or higher.\\
                8 GB RAM.
                \item 用户：取决于quality
                \end{itemize}
            \end{itemize}
		\item Community support and marketplace popularity
            \begin{itemize}
            \item unity:Unity作为现今最热的游戏引擎，社区支持是最吼的，市场份额是最牛的（伪？）\\
            	Community support
                    \begin{itemize}
                    \item 官方论坛：会员10082，帖子16429
		            \item 官方解答：“解答”是我们的社区网站，针对具体的
                          Unity问题和答案。欢迎初学者和专家这样的用户发帖，
                          这有助于开发人员之间互相帮助熟练使用Unity。内置的投票系统有助于更快找到最佳答案。
                    \item Stack Overflow：以“unity 3d”为关键字搜索出1647条结果
		            \item CSDN：以“unity 3d”为关键字搜索出65706条结果
                    \end{itemize}
	            marketplace popularity\\
	                URL：https://unity3d.com/cn/public-relations\\
                    \begin{itemize}
                    \item 百分之45的市场份额:在世界范围内，Unity占据全功能游戏引擎市场45％的份额，大约三倍于最接近我们的竞争对手。
		            \item 百分之47的开发人员\\Unity游戏引擎在开发人员中远比任何其他游
                    开发软件更受欢迎。依托Unity作为主要开发工具以及使用Unity
                    的开发者比例在不断提高。
		            \item UNITY主导了3D手机游戏
                    \item		 在世界的各个主要市场，绝大多数利用第三方工具制作的最卖座的3D手机游戏使用的都是Unity。六亿玩家 Unity通过使用我们的引擎制作的游戏吸引了遍布世界各地的6亿游戏玩家。相比之下，Facebook拥有8.29亿的日常用户。
	                \end{itemize}
            \item cryengine： 有官方community，更新速度较慢。从知乎、百度等各个渠道搜索的结果来看，在中国似乎并不是很流行，就连cryengine中文网在线人数都为0，每天也只有寥寥数篇帖子。代表作也较少，除了广为人知的《孤岛危机》系列、《狙击手:幽灵战士2》、《怪物猎人Online》之外，没有太多大型知名游
            \item unreal：a great community is https://forums.unrealengine.com/ provides different parts for diverse uses.After becoming free,it became far more popular,but not as
                popular as unity.
            \end{itemize}
		\item Official help docs availability
            \begin{itemize}
            \item unity:\\脚本与技巧百科全书http://wiki.unity3d.com/index.php,Unity Manual（文档文档）http://docs.unity3d.com/Manual/index.html

            \item cryengine:\\ http://docs.cryengine.com/display/SDKDOC2/Home（内容相当庞大）
            \item unreal:\\a detailed Unreal Engine 4 Documentation is aviliable
                on https://docs.unrealengine.com/latest/INT/ with serach function
            \end{itemize}
		\item Game genres (e.g. RTS, FPS) favoritism
            \begin{itemize}
            \item unity:由下可知，Unity偏向于移动端的角色扮演类游戏的开发。已知用Unity开发的知名游戏有：
                \begin{itemize}
                \item 角色扮演类:天龙八部3D（Android,iPhone,iPad）神游记（网页）征龙之路（ios）废土2（PC）
                    新仙剑奇侠传Online（网页） 轩辕剑陆：凤凌长空千载云（PC）Ground
                    War:（网页）刀剑神域 Code Register（PSP）仙剑奇侠传六（Windows，Xbox One	 ，PS4）大航海时代V（PC Android）
	           \item 动作类:神庙逃亡2（Android）聚爆Implosion（IOS）
		       \item 射击类:Guns Rush（网页）Firewill（网页）ShadowGun（IOS Android）
	           \item 益智类:纪念碑谷（IOS）捣蛋猪（愤怒的小鸟衍生游戏）（iOS,Mac OS X,
                    Android,Windows）神魔之塔（IOS,Android）Juice Cubes（IOS,Android）
	           \item 回合策略类:万舰穿星（Windows,Mac）炉石传说：魔兽英雄传（Windows,Mac,
                    iOS, Android）Kingdom Knights - 王国骑士团（网页）
	           \item 即时策略类:坎巴拉太空计划（Windows,Mac OS X,Linux）
                    酷游视界 - 酷酷英雄传（IOS,Android,PC）
               \end{itemize}
            \item cryengine:Cryengine主体还是FPS，但也支持RTS的开发
            \item unreal:common genres includes adventure,survival horor,FPS,action
                role-playing,RTS,simulation,TPS,MMORPG,puzzle
            \end{itemize}
		\item Built-in modeling and animating system capability
            \begin{itemize}
            \item unity:\\Unity’s Animation System
                \begin{itemize}
                \item 有内置: http://docs.unity3d.com/Manual/AnimationOverview.html（官方文档）\\
		              Unity has a rich and sophisticated animation system called Mecanim.
                      Mecanim provides:\\
		              Easy workflow and setup of animations for all elements of Unity
                      including objects, characters, and properties.\\
                      Support for imported animation clips and animation created within Unity\\
		              Humanoid animation retargeting - the ability to apply animations from
                      one character model onto another.\\
		              Simplified workflow for aligning animation clips.\\
		              Convenient preview of animation clips, transitions and interactions between
                      them. This allows animators to work more independently of programmers, prototype and preview their animations before gameplay code is hooked in.
                      Management of complex interactions between animations with a visual programming tool.
                      Animating different body parts with different logic.
                      Layering and masking features
	             \item 无内置:支持以下软件 http://docs.unity3d.com/Manual/HOWTO-importObject.html
	                   Maya,Cinema 4D,3ds Max,Cheetah3D,Modo,Lightwave,Blender
                 \end{itemize}
            \item cryengine:cryengine自主建模工具不专业，但可以用3dsmax或者maya导入模型或者动画。
            \item unreal:I didn't find such function,but it works well with maya,3dmax and other tools,
                 The animating system allows for a deep level of control for your characters and Skeletal Meshe,more functions see for example\\
                 https://docs.unrealengine.com/latest/INT/Engine/Animation/Overview
            \end{itemize}
		\item Graphics quality
            \begin{itemize}
            \item cryengine:can be very high,but may require high-quality hardwire.
            \item unreal:第三代Cryengine改进了可破坏环境、光源效果、实时软粒子系统、实时动态全局光照、
                景深效果及大量其它特效。毫无疑问，cryengine3的画质绝对是三者之中最好的。
            \item unity:关于Unity5与Unreal4图形效果的比较\\
                知乎问答：Unity 5 发布了，但是否 Unity 做的游戏与 Unreal 相比要显得粗糙很多？ URL：h
            	游戏画面是很多因素决定的，材质模型,灯光模型,渲染，和后期特效起着重要的作用\\
                材质上面，早版本的unreal3碾压其他引擎的重要方面就是材质，首先是normalmap效果强烈，其次是高
                光模型亮眼（油亮派），而且高亮度部分会自动glow,所以某种程度上模型导入unreal就有不同的感觉。
                unity的材质方面，是没有类似unreal的节点系统的，从unity5开始多了默认的几个材质类型，
                形式是往cryengine那种简单的配置方式上面靠，所以材质灵活性不够，另外一点就是unity不是重Normal map的引擎，带normalmap的材质总是塑料感太重，金属性不足，unity5虽然是改进了一些这方面的感觉，
                但由于默认的linear色彩空间，总是显得过亮，但是有没法再材质级别有效控制，除非使用类似
                shaderforge之类的插件，当然效果还是没有unreal的自带材质编辑器来的灵活
        	    灯光模型方面，场景实时物体一多，阴影贴图质量就会开始下降，可能是在阴影分割上面算
                法不够先进，
                unreal 和cry这方面问题就小的多 灯光和材质的模型配合起来，高光总是不够漂亮，也是确实存在的，即使unity5也有很大改进空间，
                这个不敢妄言太多渲染：来补下linear和srgb之前的梗，真实性方面，人眼身是有一些特性的，
                就是说按照真实色彩曲线在屏幕上面显示的图像，和我们看到真实的时间，会有区别，因为人眼会加强
                某个亮度区域的色彩以适应这个世界，而摄像头就客观的多，三维渲染也是更真实一些，但是如果把这
                种真实的图像给人眼看到，会感觉比我们人眼看到灰暗的多，所以一般会在硬件方面做一个反曲线最后
                变成srgb的色彩空间让人看到。 那我们游戏引擎里面最终效果给人看到，当然是这种强化过的适应人眼的色彩空间，但是做光照计算
                和贴图就不行，因为会由于多次的色彩强化导致最终画面强烈失真，这时候就是需要linear的色彩空间
                ，计算时候用真实色彩，直到输出这一步把色彩强化一遍以适合人眼。 unity很早就是linear的色彩空间，但是由于后期最后一部的矫正方面很多从业人士的素养不足，或者完
                全没有这个意识，做出来的效果完全是不正确，或者缺乏调整弹性的。
		        而unreal则在工作流上面几乎是整合和后期的色表，去解决这个问题。我们转到下一个话题
                说后期:在所有的渲染结束之后，会加色彩校正和滤镜，我们看电影就知道，电影拍摄的效果和最终出片
                效果区别巨大，那是因为色彩Lut表校正之后的关系，换而言之，就是把所有的色彩一一对应，映射成另
                外一种色彩感觉，这个流程在unreal里面是硬性整合了，而unity则要作为滤镜使用，很多用户也不够重
                视这个步骤。导致最终效果不良材质模型，灯光模型，渲染，和后期特效 这几个因素的叠加，导致了unity5的画面或者因为自身功能不强，或者因为开发者素养不足，整体效果会
                有弱于unreal的感觉（如果两个引擎都是最好的开发者在做，应该也是unreal画面更好一些） 但是粗糙这个词汇，我不赞同，所有的特效都要考虑硬件的，unity的做法很好的考虑了不同游戏平台对
                画面的兼容性，所有可以随时舍弃很多效果，保证平台的支持，这方面比unreal要灵活，所以说unity画
                面上面的表现比unreal看起来差，并不是那么单纯的原因，你看过cryengine在mobile上面的一些例子你
                会更理解这个问题，引擎不是一味追求.
		        unity的unitypackge包是非常方便的东西，用法得当很多小游戏都是几天做完，这方面unreal
                store仍有差距。
		        总的来说unreal由于很多历史原因和架构庞大，开发效率方面比unity要低很多
            \end{itemize}
		\item Work flow fluency
            \begin{itemize}
            \item unity:“Here we’ll explain the steps to use a single asset with Unity”
                就这一点而言看起来还比较流畅，然而并没有找到关于“编程->看效果”的流畅程度的概括性描述
                URL：http://docs.unity3d.com/Manual/AssetWorkflow.html
	            \begin{itemize}
                \item Asset Workflow
                    Here we’ll explain the steps to use a single asset with Unity. These steps are general and are meant only as an overview for basic actions. For the example, we’ll talk about using a 3D mesh.
	            \item Create Rough Asset
		            Use any supported 3D modeling package to create a rough version of your asset.
                    Our example will use Maya. Work with the asset until you are ready to save. For a list of applications that are supported by Unity, please see this page.
	            \item Import
		            When you save your asset initially, you should save it normally to the Assets
                    folder in your Project folder. When you open the Unity project, the asset will be detected and imported into the project. When you look in the Project View, you’ll see the asset located there, right where you saved it. Please note that Unity uses the FBX exporter provided by your modeling package to convert your models to the FBX file format. You will need to have the FBX exporter of your modeling package available for Unity to use. Alternatively, you can directly export as FBX from your application and save in the Projects folder. For a list of applications that are supported by Unity, please see this page.
	            \item Import Settings
		            If you select the asset in the Project View the import settings for this asset
                    will appear in the Inspector. The options that are displayed will change based on the type of asset that is selected.
	            \item Adding Asset to the Scene
		            Simply click and drag the mesh from the Project View to the Hierarchy or Scene
                    View to add it to the Scene. When you drag a mesh to the scene, you are creating a GameObject that has a Mesh Renderer Component. If you are working with a texture or a sound file, you will have to add it to a GameObject that already exists in the Scene or Project.
	            \item Putting Different Assets Together
		            Here is a brief description of the relationships between the most common assets
                    A Texture is applied to a Material\\
                    A Material is applied to a GameObject (with a Mesh Renderer Component)\\
                    An Animation is applied to a GameObject (with an Animation Component)\\
                    A sound file is applied to a GameObject (with an Audio Source Component)
	            \item Creating a Prefab
		            A Prefab is a stored collection containing one or more complete GameObjects with
                    components attached and properties set. Prefabs are asset types, so they do not appear in the scene in their own right. However, they can be used to create instances of the stored objects in the scene. Each instance is a copy of the original prefab. For example, you might use a prefab to store a tree object and then create many instances of the tree in a forest scene.\\
		            By default, changes made to the prefab are automatically applied to all the
                    instances, and so using prefabs can be a good way to maintain consistency among a set of objects. However, you can also break the link between the instance and the prefab if you want to create special variations on the original. You can also make changes to an instance, and then save those changes to the prefab (menu: GameObject > Apply Changes to Prefab).
		        \end{itemize}
            \item cryengine:CryEngine3的优化做得不错，现在市面上的中端配置基本可以最高配置流畅运行。
            \item unreal:SORRY,I HAVEN'T FOUND IT.
            \end{itemize}
		\item Learning difficulty for indie developers and teams
            \begin{itemize}
            \item unity:“入门易精通难”	 为什么入门简单，看一下官网的文档和视频教程就知道了，看完几段视频和例子就能让初学者做出能玩的东西，其他同类商业引擎都做不到。物体+组件的结构，所见即所得的编辑方式，都把初学者的门槛降到了最低。	 再说说难精通的体现。其实任何可以拿来做高大上酷炫屌游戏的商业引擎都是难精通的，这个由引擎的功能深度和泛用性决定。一个集成了无数商业中间件的引擎，包括动画系统、GUI、光照系统、寻路、物理等各个部分，任何一部分单独拿出来都需要用户用心掌握。从这个角度来说Unity和Unreal基本是差不多的。
		        Unity特有的坑有哪些？
                \begin{itemize}
                \item 脚本执行顺序：
                    MonoBehavior是Unity组件系统的核心，离开这个类所有易上手和高效开发的特性都无法施展。但多个组件脚本的执行顺序控制始终是令人头痛的问题。不了解这一点的用户很容易陷入各种隐藏bug的泥沼。
		        \item 组件式功能结构
                    给每个人更大的控制权力，但无法很好的区分团队不同成员的责任。相比Unreal把编程分为C++，UnrealScript和Kismet三层的做法，Unity让每个开发者都能看到脚本源码并在需要时进行修改。对于独狼开发者来说非常方便，但如果一个游戏逻辑同时可能受到脚本程序、prefab参数配置和场景引用关联三方制约，维护起来就非常的乱，出了问题也很难第一时间分清责任。
		        \item 内存分配和垃圾回收
                    造成的效率问题初学者很难了解。Unity的一个重要特征就是为了让整个引擎有更广的受众，故意隐藏了很多复杂的使用方法。比如说全自动的垃圾回收，就是为了让不懂内存分配的用户也能无障碍使用。但很快进阶一点的用户就会发现大量运行时垃圾回收造成的拖慢，以至于成为一个入门必经的陷阱。如果能在官方文档里告诉用户哪些操作会分配内存，情况会改善许多。
		        \item 功能迭代推新迅速
                造成大量不成熟不完善的工作流程。这一点很难说是缺点，毕竟能第一时间用到酷炫的新功能对很多用户来说是求之不得的，当然如果你是商业项目的技术负责人就要小心了。一般来说，官方推出的功能至少要在一年后稳定性和适用性才会超过Asset Store上的同类第三方插件。 总的说来，由于优秀的可扩展性，上述这些问题都不致命。总有人在制作优秀的工具来弥补这个引擎的各种不足。而配合其天下无敌的易用性，unity整体的技术方向是非常成功的。
                \end{itemize}
            \item cryengine:
            知乎上有关cryengine问题很少！但是知乎上cryengine和unreal都是开了专题的！知乎上唯一有用的回答
            说的是cryengine没有基础会很难学！而且英文界面很让人头疼!
            \item unreal:fairly small,there are plenty tur
            \end{itemize}

	\end{enumerate}
	\section{Conclusion}
	After the investigation, we prefer to use \verb|\* decision *\| as our development environment.
	\newpage\appendix
	\section{Recommended Sources}
	\begin{enumerate}
		\item Official sites
		\item 3rd party critics
		\item Individuals' comments
	\end{enumerate}
\end{document} 
